Programming and Logic Building
Tutorials

Name-Farhan Nadaf
PRN-B24IT1074 




1)Write a C program to perform and display the results of all arithmetic operations
(+, -, *, /, %) ontwo floating-point numbers provided by the user.
#include <stdio.h>
int main()
{
    int num1,num2,sum,sub,mul,mod,div;
    printf("enter two number:\n");
    scanf("%d%d",&num1,&num2);
    sum=num1+num2;
    printf("addition of two number=%d\n",sum);
    sub=num1-num2;
    printf("subtraction of two number=%d\n",sub);
    mul=num1*num2;
    printf("multiplication of two number=%d\n",mul);
    div=num1/num2;
    printf("division of two number=%d\n",div);
    return 0;
}
OUTPUT:
enter two number:
4
2
addition of two number=6
subtraction of two number=2
multiplication of two number=8
division of two number=2





2)Determine if a given year is a leap year or not using nested if-else statements.
#include <stdio.h>
int main()
 {
   int year;
   printf("Enter a year: ");
   scanf("%d", &year);
   if (year % 400 == 0) {
      printf("%d is a leap year.", year);
   }
      else if (year % 100 == 0) {
      printf("%d is not a leap year.", year);
   }
      else if (year % 4 == 0) {
      printf("%d is a leap year.", year);
   }
   else {
  printf("%d is not a leap year.", year);
   }
  return 0;
}
OUTPUT:
Enter a year: 2006
2006 is not a leap year





3)Print the first n prime numbers using a while loop and for loop.
#include <stdio.h>
int main()
{
  int n,i=1,j,int=0;
  printf("\n Enter Any Number:");
  scanf("%d",&n);
  printf("\n Prime number between 1 to %d \n",n);
  while(i<=n)
  {
     j=0;
     int=1;
     while(j<=i)
     {
      if(i%j==0)
      {
       int++;
      }
     j++;
   }
     if(int==2)
     {
      printf(" %d",i);
     }
     i++;
 }
  return 0;
}
OUTPUT:
Enter Any Number
15
Prime number between 1 to 15
3  5  7  11  13





4)Calculate the GCD and LCM of two numbers using both iterative and recursive
functions.
#include <stdio.h>
 void main()
{
    int num1, num2, gcd, lcm, remainder, numerator, denominator;
    printf("Enter two numbers:\n");
    scanf("%d %d", &num1, &num2);
     numerator = (num1>num2)?num1:num2;
    denominator = (num1<num2)?num1:num2;
    remainder = numerator % denominator;
 
    while (remainder != 0)
    {
        numerator   = denominator;
        denominator = remainder;
        remainder   = numerator % denominator;
    }
    gcd = denominator;
    lcm = num1 * num2 / gcd;
    printf("GCD of %d and %d = %d\n", num1, num2, gcd);
    printf("LCM of %d and %d = %d\n", num1, num2, lcm);
}
OUTPUT:
Enter two numbers:
12 15
GCD of 12 and 15 = 3
LCM of 12 and 15 = 60






5)Dynamically allocate memory for an array of integers, accept values from the user,
and find thesum and average of the elements.
int main()
{
    int* ptr;
    int limit;
    int i;
    int sum;
    int average;
    printf("Enter limit of the array: ");
    scanf("%d", &limit);
    ptr = (int*)malloc(limit * sizeof(int));
    for (i = 0; i < limit; i++) {
        printf("Enter element %02d: ", i + 1);
        scanf("%d", (ptr + i));
    }
    printf("\nEntered array elements are:\n");
    for (i = 0; i < limit; i++) {
        printf("%d\n", *(ptr + i));
    }

        sum = 0;
    for (i = 0; i < limit; i++) {
        sum += *(ptr + i);
    }
    printf("Sum of array elements is: %d\n", sum);
}
for(i=0;i<limit;i++){
average=sum/total;
printf("average of array elements is:%d\n",average);
}
        free(ptr);
    return 0;
}
OUTPUT:
Enter limit of the array: 5
Enter element 01: 100
Enter element 02: 200
Enter element 03: 300
Enter element 04: 400
Enter element 05: 500
Entered array elements are:
100
200
300
400
500
Sum of array elements is: 1500
Average of array elements is: 1100







6)In array do the following:
1. Find given element in array
2. Find Max element
3. Find Min element
4. Find frequency of given element in array
Find Average of elements in Array.
#include<stdio.h>
void main()
{
  int a[5], i, j;
  printf("Enter elements of array\n");
  for(i=0;i<5;i++)
  {
    scanf("%d", &a[i]);
  }
  printf("Given elements of array are\n");
  for(j=0;j<5;j++)
  {
    printf("%d\n", a[j]);
  }
}   
OUTPUT:
Enter elements of array
3
4
56
2
3
Given elements of array are
3
4
56
2
3




7)Write a C program that takes a string as input and performs the following
operations:Reverse the string.
i) Check if the string is a palindrome.
ii) Count the frequency of each character in the string and display the results.
#include <stdio.h>
void isPalindrome(char *str)
 {
          int left = 0;
      int right = strlen(str) - 1;
    while (left < right) {
              if (str[left] != str[right]) {
            printf("\"%s\" is not palindrome.\n",
               str);
            return;
        }
        left++;
        right--;
    }
    printf("\"%s\" is palindrome.\n",
               str);
}

int main() {
      isPalindrome("madam");
      isPalindrome("hello");
      return 0;
}
int main() {
    char str[1000], ch;
    int count = 0;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    printf("Enter a character to find its frequency: ");
    scanf("%c", &ch);

    for (int i = 0; str[i] != '\0'; ++i) {
        if (ch == str[i])
            ++count;
    }

    printf("Frequency of %c = %d", ch, count);
    return 0;
}
OUTPUT:
"madam" is palindrome.
"hello" is not palindrome
Enter a string: I love India
Enter a character to find its frequency: i
Frequency of e = 3





8)Display information of multiple students (name, age, grade) using an array of
structures
#include <stdio.h>
struct student {
    char firstName[50];
    int age;
    float marks;
} s[5];

int main() {
    int i;
    printf("Enter information of students:\n");
       for (i = 0; i < 5; ++i) {
        s[i].age = i + 1;
        printf("\nFor age%d,\n", s[i].roll);
        printf("Enter first name: ");
        scanf("%s", s[i].firstName);
        printf("Enter marks: ");
        scanf("%f", &s[i].marks);
    }
    printf("Displaying Information:\n\n");
    for (i = 0; i < 5; ++i) {
        printf("\nage: %d\n", i + 1);
        printf("First name: ");
        puts(s[i].firstName);
        printf("Marks: %.1f", s[i].marks);
        printf("\n");
    }
    return 0;
}
OUTPUT:
Enter name: Tom
Enter age:14
Enter marks: 91

Enter name: Jerry
Enter age:15
Enter marks: 89
.
.
.
Displaying Information:
Name: Tom
Age:14
Marks: 91
Name:Jerry
Age:15
Marks:89






9)Write a C program to store and retrieve employee records (name, id, salary) from a
binary file
#include<stdio.h>
typedef struct
{
 char name[30];
 int id;
 int salary;
}employee;

int main()
{
 int n,i,j;
 FILE *fptr;
 employee e[10], temp;
 fptr = fopen("employee.txt","rb");
 if(fptr == NULL)
 {
  printf("File error!");
  exit(1);
 }
 printf("Enter how many records:\n");
 scanf("%d",&n);
 for(i=0;i < n;i++)
 {
  fread(&e[i],sizeof(e[i]),1, fptr);
 }
 for(i=0;i< n-1;i++)
 {
  for(j=i+1;j< n;j++)
  {
   if(e[i].salary>e[j].salary)
   {
    temp = e[i];
    e[i] = e[j];
    e[j] = temp;
   }
  }
 } for(i=0;i< n;i++)
 {
  printf("Name = %s\tId = %d\tSalary = %d\n",e[i].name, e[i].id, e[i].salary);
 }
 fclose(fptr);

 return 0;
}
OUTPUT:
Enter name:Ram Roy
Enter id:Ram1
Enter salary:40000






10)Create a program that uses a union to store an integer, a floating-point number, or
a string andDisplay the stored values.
#include <stdio.h>

// union template or declaration
union un {
    int member1;
    char member2;
    float member3;
};

// driver code
int main()
{
       union un var1;
    var1.member1 = 15;

    printf("The value stored in member1 = %d",
           var1.member1);

    return 0;
}
OUTPUT:
the value stored in member1 = 15

